#include <stdio.h>
#include <math.h>
#define k 5

int min(int b[k], int x, int y,int minxy){ //функция нахождения минимального элемента массива
    for(int i=0;i<k;i++){
        if((x<=b[i])&&(b[i]<=y)&&(minxy>b[i])){
            minxy=b[i];}
    }
    return minxy;}

int aver(int b[k]){// функция нахождение среднего арифметического
    int i,ind1=-1,ind2,minb=b[0],sum=0,count=0;//ind1 - индекс первого чётного элемента, ind2 - последнего минимального
    for(i=0;i<k;i++){//поиск индекса первого чётного числа
        if (b[i]%2==0){
            ind1=i;
            break;}}
    if(ind1==-1){printf("\nВ массиве нет чётных элементов");return 0;}
    for(i=1;i<k;i++){//поиск индекса последнего минимального элемента
        if(minb>=b[i]){minb=b[i];ind2=i;}}
    if (abs(ind1-ind2)<=1){printf("\nМежду первым чётным и последним минимальным элементами нет других элементов");return 0;}//если индексы совпадают или отличаются на 1, то не будет элементов между 1 чётным и последним миним.
    else if(ind1>ind2){//вычисление ср.арифм. для случая, когда первый чётный элемент идёт после последнего минимального
        for(i=ind2+1;i<ind1;i++){
            sum+=b[i];
            count+=1;}}
        else {//вычисление ср.арифм. для случая, когда последний минимальный элемент идёт после первого чётного
            for(i=ind1+1;i<ind2;i++){
            sum+=b[i];
            count+=1;}}
        printf("\nСреднее арифметическое равно: %f",(float)sum/count);
    return 0;
}

int create(int b[k]){//ввод элементов последовательности
    printf("Введите элементы массива:\n");
    for(int i=0;i<k;i++){
        printf("b[%d]=",i);scanf("%d",&b[i]);}
    return b[k];}

int print(int b[k]){//вывод элементов последовательности
    printf("Массив b: ");
    for(int i=0;i<k;i++){
        printf("%d ",b[i]);}}

int main(){
    int b[k],c=0,minxy,i;
    float x,y;
    printf("Введите значение X: ");scanf("%f",&x);
    printf("Введите значение Y: ");scanf("%f",&y);
    create(b);
    print(b);
    if(x<=y){
        for(i=0;i<k;i++){
            if ((x<=b[i])&&(b[i]<=y)){c=1;minxy=b[i];}}//проверка на наличие между Х и У элементов последовательности
        if(c==1){//если между Х и У есть элементы последовательности, то среди них ищется минимальное
            printf("\nМинимальный элемент b между X и Y: %d",min(b,x,y,minxy));}
        else{printf("\nМежду X и Y нет элементов из b");}}
    else{printf("\nY должен быть больше или равен Х");}
    aver(b);
    return 0;
}
